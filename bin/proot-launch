#!/bin/bash

# dependencies #

source /data/data/com.termux/files/usr/bin/console
source /data/data/com.termux/files/usr/bin/globals

# usage #

if [[ $# -gt 3 ]]
then
	echo "Usage: ${0} | <username> | <application>"
	exit 1
fi

# variables #

script=$(basename -- "${BASH_SOURCE[0]}")

USERNAME=$1
APPLICATION=$2
PROOT_DIRECTORY=$3
BIND_DIRECTORY=$4

# set defaults

# desktop session

[ -z "$DESKTOP_SESION" ]	&& DESKTOP_SESSION="blackbox"

# environment defaults

[ -z "$BROWSER" ]			&& BROWSER="$BROWSER"
[ -z "$EDITOR" ]			&& EDITOR="$EDITOR"
[ -z "$PAGER" ]				&& PAGER="$PAGER"
[ -z "$TERMINAL" ]			&& TERMINAL="$TERM"
[ -z "$VISUAL" ]			&& VISUAL="$VISUAL"

# push variables if no argument is passed

[ -z "$USERNAME" ]			&& USERNAME="root"
[ -z "$APPLICATION" ]		&& APPLICATION="${TERMINAL}"
[ -z "$PROOT_DIRECTORY" ]	&& PROOT_DIRECTORY=${PREFIX%/*}/img
[ -z "$BIND_DIRECTORY" ]	&& BIND_DIRECTORY=${PREFIX%/*}/mnt

# assume termux-exec is present - unset LD_PRELOAD

unset LD_PRELOAD

# verify user existence: loop through proot /etc/passwd file
# make sure 'user' exists and corresponds to 'username'
# then source environment variables from file
# default to 'root' if 'username' is invalid or does not exist

last_entry="$(tail -n 1 "${PROOT_DIRECTORY}"/etc/passwd)"

while read -r entry
do
	IFS=':'

	read USER _ USER_ID GROUP_ID FULL_NAME HOME SHELL <<< "$entry"
	
	FULL_NAME=${FULL_NAME%,,,}

	# verify that 'username' matches parsed 'user' entry

	if [[ "$USERNAME" == "$USER" ]]
	then
		# break out of loop if user is found

		break
	fi

	# simulate EOF:
	# default entry used only if last line is reached

	if [[ "$entry" == "$last_entry" ]]
	then
		USER="root"
		USER_ID=0
		GROUP_ID=0
		FULL_NAME="root"
		HOME="/root"
		SHELL="/bin/bash"
	fi
done < "${PROOT_DIRECTORY}"/etc/passwd

# reset IFS

IFS=' '

# proot #

DISPLAY=":1"
LOCALHOST_ADDRESS="127.0.0.1"
XDG_RUNTIME_DIR="/run/user/${USER_ID}"

# setup proot command arguments

command="proot"

command+=" --kill-on-exit"
command+=" --link2symlink"
command+=" -r ${PROOT_DIRECTORY}"
command+=" -b ${PREFIX%/*}/home:/home/termux"
[ -d "${PREFIX%/*}"/storage/external ] && command+=" -b "${PREFIX%/*}"/storage/external:/media/External" || :
[ -d "${PREFIX%/*}"/storage/internal ] && command+=" -b "${PREFIX%/*}"/storage/internal:/media/Internal" || :
command+=" -b /apex"
command+=" -b /data"
command+=" -b /dev"
command+=" -b /proc"
command+=" -b /storage"
command+=" -b /sys"
command+=" -b /system"
command+=" -b /vendor"
command+=" -i ${USER_ID}:${GROUP_ID}"
[ -d  "$PROOT_DIRECTORY/${HOME}" ] && command+=" -w ${HOME}" || exit 1
command+=" env -i"
command+=" ANDROID_DATA=$ANDROID_DATA"
command+=" ANDROID_ROOT=$ANDROID_ROOT"
command+=" ANDROID_RUNTIME_ROOT=$ANDROID_RUNTIME_ROOT"
command+=" ANDROID_TZDATA_ROOT=$ANDROID_TZDATA_ROOT"
command+=" PREFIX=$PREFIX"
command+=" SETUP_DIRECTORY=${PREFIX%/*}"
command+=" BINARIES_DIRECTORY=${PREFIX}/bin"
command+=" LIBRARIES_DIRECTORY=${PREFIX}/lib"
command+=" PROOT_DIRECTORY=${PROOT_DIRECTORY}"
command+=" BIND_DIRECTORY=${BIND_DIRECTORY}"
command+=" DESKTOP_SESSION=$DESKTOP_SESSION"
command+=" BROWSER=${BROWSER}"
command+=" EDITOR=${EDITOR}"
command+=" PAGER=${PAGER}"
command+=" TERM=${TERMINAL}"
command+=" VISUAL=${VISUAL}"
command+=" DISPLAY=${DISPLAY}"
command+=" HOME=${HOME}"
command+=" USER=${USER}"
command+=" LANG=C.UTF-8"
command+=" LOCALHOST=${LOCALHOST_ADDRESS}"
command+=" PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:$PREFIX/bin:$PREFIX/sbin"
command+=" PULSE_SERVER=${LOCALHOST_ADDRESS}"
command+=" QT_STYLE_OVERRIDE="
command+=" QT_QPA_PLATFORMTHEME=gtk2"
command+=" QT_X11_NO_MITSHM=1"
command+=" XDG_RUNTIME_DIR=${XDG_RUNTIME_DIR}"
command+=" XDG_CONFIG_HOME=${HOME}/.config"
command+=" XDG_CACHE_HOME=${HOME}/.cache"
command+=" XDG_DATA_HOME=${HOME}/.local/share"
command+=" XDG_DATA_DIRS=/usr/local/share:/usr/share"
command+=" XDG_CONFIG_DIRS=/etc/xdg" 
command+=" XAUTHORITY=${XDG_RUNTIME_DIR}/.Xauthority"
command+=" APPLICATION=${APPLICATION}"
command+=" ${SHELL} --login"

# execute proot

exec $command

if [ ! -z "$application" ]
then
	console.fwd "Starting application [ ${APPLICATION} ]..."
	echo
else
	console.fwd "Starting session [ ${USER} ]..."
	echo
fi

# return exit status

exit "$?"
