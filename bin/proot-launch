#!/bin/bash

# dependencies #

source /data/data/com.termux/files/usr/bin/console
source /data/data/com.termux/files/usr/bin/globals

# usage #

if [[ $# -gt 3 ]]
then
	echo "Usage: ${0} | <username>  | <application>"
	exit 1
fi

# variables #

username=$1
application=$2
proot_directory=$3
bind_directory=$4

# set defaults if no argument is passed

if [ -z "$proot_directory" ]
then
	proot_directory=${PREFIX%/*}/img
fi

if [ -z "$bind_directory" ]
then
	bind_directory=${PREFIX%/*}/mnt
fi

if [ -z "$username" ]
then
	username="root"
fi

# loop through proot /etc/passwd file
# make sure 'user' exists and corresponds to 'username' input
# default to root if 'username' is invalid or does not exist

last_entry="$(tail -n 1 "${proot_directory}"/etc/passwd)"

while read -r entry
do
	IFS=':'

	read user _ uid gid full_name home shell <<< "$entry"
	full_name=${full_name%,,,}

	# verify that 'username' matches parsed 'user' entry

	if [[ "$username" == "$user" ]]
	then
		# break out of loop if user is found

		break
	fi

	# simulate EOF:
	# default entry used only if last line is reached

	if [[ "$entry" == "$last_entry" ]]
	then
		user="root"
		uid=0
		gid=0
		full_name="root"
		home="/root"
		shell="/bin/bash"
	fi
done < "${proot_directory}"/etc/passwd

IFS=' '

# assume termux-exec is present - unset LD_PRELOAD

unset LD_PRELOAD

# setup proot command arguments

command="proot"
command+=" --kill-on-exit"
command+=" --link2symlink"

# system image location to use

command+=" -r ${proot_directory}"

# bind available mount points inside $bind_directory

if [ -n "$(ls -A ${bind_directory})" ]
then
	for i in ${bind_directory}/*
	do
		. $i
	done
fi

# bind termux home directory

command+=" -b ${PREFIX%/*}/home:/home/termux"

# bind storage locations

storage_directories_list=(
	"${PREFIX%/*}"/storage/external
	"${PREFIX%/*}"/storage/internal
)

for storage_directory in ${storage_directories_list[@]}
do
	# verify that storage locations are available before binding

	if [[ -d "$storage_directory" ]]
	then
		link=$(basename $storage_directory)
		link=${link^}

		command+=" -b ${storage_directory}:/media/${link}"
	fi
done

# bind android system directories

command+=" -b /apex"
command+=" -b /data"
command+=" -b /dev"
command+=" -b /proc"
command+=" -b /storage"
command+=" -b /sys"
command+=" -b /system"
command+=" -b /vendor"

# /plat_property_contexts necessary for some certain devices

# command+=" -b /plat_property_contexts"

# switch to user id

command+=" -i ${uid}:${gid}"

# verify that home folder is available before specifying

if [[ -d  "$proot_directory/${home}" ]]
then
	command+=" -w ${home}"
fi

# setup environment

command+=" /usr/bin/env -i"
command+=" SETUP_DIRECTORY=${PREFIX%/*}"
command+=" BINARIES_DIRECTORY=${PREFIX}/bin"
command+=" LIBRARIES_DIRECTORY=${PREFIX}/lib"
command+=" PROOT_DIRECTORY=${SETUP_DIRECTORY}/img"
command+=" BIND_DIRECTORY=${SETUP_DIRECTORY}/mnt"
command+=" ANDROID_DATA=$ANDROID_DATA"
command+=" ANDROID_ROOT=$ANDROID_ROOT"
command+=" ANDROID_RUNTIME_ROOT=$ANDROID_RUNTIME_ROOT"
command+=" ANDROID_TZDATA_ROOT=$ANDROID_TZDATA_ROOT"

# verify application argument and load appropriate desktop session manager

if [[ "$application" != "" ]]
then
	DESKTOP_SESSION="i3"

	command+=" APPLICATION=${application}"
else
	DESKTOP_SESSION="xfce4-session"
fi

command+=" DESKTOP_SESSION=$DESKTOP_SESSION"

# set display

command+=" DISPLAY=:1"

# set port

command+=" 590${DISPLAY:1}"

# set home

command+=" HOME=${home}"

# set user

command+=" USER=${user}"

# set locale

command+=" LANG=C.UTF-8"

# set localhost address

command+=" LOCALHOST=127.0.0.1"

# append termux /bin and /sbin locations to enable proot utilities passthrough

command+=" PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:$PREFIX/bin:$PREFIX/sbin"

# append termux $PREFIX for path(s) passthrough

command+=" PREFIX=$PREFIX"

command+=" PULSE_SERVER=$LOCALHOST"

# append Qt environment overrides:
# QT_QPA_PLATFORMTHEME - theming compatibility
# QT_X11_NO_MITSHM - shared memeory override for certain OpenGL/ES rendering requirements

command+=" QT_QPA_PLATFORMTHEME=gtk2"
command+=" QT_X11_NO_MITSHM=1"

# set terminal

command+=" TERM=$TERM"

# set runtime authority arguments

command+=" XDG_RUNTIME_DIR=/run/user/${uid}"
command+=" XAUTHORITY=${XDG_RUNTIME_DIR}/.Xauthority"

# set login shell

command+=" ${shell} --login"

# execute proot command

exec $command

if [[ "$application" != "" ]]
then
	console.fwd "Starting session [ ${user} - ${application} ]..."
else
	console.fwd "Starting session [ ${user} ]..."
fi

# return proot exit status

exit $?
