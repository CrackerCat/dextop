#!/bin/bash

# dependencies #

source /data/data/com.termux/files/usr/bin/console
source /data/data/com.termux/files/usr/bin/globals

# usage #

# variables #

script=$(basename -- "${BASH_SOURCE[0]}")p

# update packages list

console.info "Updating repository and package information."
echo

apt update >> "${PREFIX}"/var/log/"${script}".log 2>&1 &

console.spinner "Updating..."
echo

# upgrade installed packages

console.info "Upgrading installed packages."
echo

echo yes | apt upgrade >> "${PREFIX}"/var/log/"${script}".log 2>&1 &

console.spinner "Upgrading..."
echo

# packages #

utilities_list=(
	curl
	git
	hub
	nano
	proot
)

libraries_list=(
	libandroid-*
)

sound_list=(
	pulseaudio
)

termux_list=(
	termux-am
	termux-api
	termux-apt-repo
	termux-auth
	termux-create-package
	termux-elf-cleaner
	termux-exec
	termux-keyring
	termux-licenses
	termux-services
	termux-tools
	game-repo
	root-repo
	science-repo
	termux-apt-repo
	unstable-repo
	x11-repo
	
)

install_list=(
	${termux_list[@]}
	${utilities_list[@]}
	${libraries_list[@]}
	${sound_list[@]}
)

# install #

console.info "Installing required packages."
echo

for package in ${install_list[@]}
do
	if [ -z "$(command -v ${package})" ]
	then
		console.warning "Required package '${package}' not present."
		echo

		echo yes | apt install ${package} >> "${PREFIX}"/var/log/"${script}".log 2>&1 &
		
		console.spinner "Installing [ ${package} ]..."
		echo
	else
		console.success "Required package '${package}' already installed."
		echo
		
		console.fwd "Continuing..."
		echo

		:
	fi
done

# cleanup

apt clean >> "${PREFIX}"/var/log/"${script}".log 2>&1 &

console.spinner "Cleaning..."
echo
