#!/bin/bash

# dependencies #

source /data/data/com.termux/files/usr/bin/console
source /data/data/com.termux/files/usr/bin/globals

# usage #

# variables #

script=$(basename -- "${BASH_SOURCE[0]}")p

# update packages list

console.inf "Updating repository and package information."
echo

console.silence "apt update" &

console.spin "Updating..."
echo

# upgrade installed packages

console.inf "Upgrading installed packages."
echo

console.silence "echo yes | apt upgrade" &

console.spin "Upgrading..."
echo

# packages #

libraries_list=(
	libandroid-glob
	libandroid-glob-static
	libandroid-shmem
	libandroid-shmem-static
	libandroid-spawn
	libandroid-spawn-static
	libandroid-support
	libandroid-support-static
)

repositories_list=(
	game-repo
	root-repo
	science-repo
	termux-apt-repo
	unstable-repo
	x11-repo
)

termux_list=(
	termux-am
	termux-api
	termux-auth
	termux-create-package
	termux-elf-cleaner
	termux-exec
	termux-keyring
	termux-licenses
	termux-services
	termux-tools
)

utilities_list=(
	curl
	proot
)

install_list=(
	${libraries_list[@]}
	${utilities_list[@]}
)

# install #

console.inf "Installing required packages."
echo

for package in ${install_list[@]}
do
	if [ -z "$(command -v ${package})" ]
	then
		console.wrn "Required package '${package}' not present."
		echo

		console.silence "echo yes | apt install ${package}" &
		
		console.spin "Installing [ ${package} ]..."
		echo
	else
		console.scs "Required package '${package}' already installed."
		echo
		
		console.fwd "Continuing..."
		echo

		:
	fi
done

# cleanup

console.silence "apt clean" &

console.spin "Cleaning..."
echo
