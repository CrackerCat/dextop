#!/bin/bash

# dependencies #

source /data/data/com.termux/files/usr/bin/console
source /data/data/com.termux/files/usr/bin/globals

# usage #

# variables #

script=$(basename -- "${BASH_SOURCE[0]}")

# verify termux storage directory existence

if [ -d "$HOME"/storage ]
then
	# exists - proceed with setup

	console.success "Storage directory detected under"
	console.success "$HOME"
	echo

	console.fwd "Continuing..."
	echo
else
	# does not exist - enable storage permissions: requires user touch input
	
	console.warning "Termux requires user permission to access storage on this device..."
	echo
	
	console.fwd "Both internal and external storage are made available:"
	echo
	
	console.info "Allowing access greatly benefits the desktop experience"
	console.info "and will make the device's storage visble and accessible"
	console.info "through your desktop session and file manager."
	echo
	
	console.choice "Select 'Allow' or 'Deny' when prompted"
	console.choice "to enable or disable storage access permission."
	echo

	sleep 10

	# trigger storage permissions dialog

	# am broadcast	--user 0 \
	#				--es com.termux.app.reload_style storage \
	#				-a com.termux.app.reload_style com.termux > /dev/null

	termux-setup-storage

	# wait 5 seconds to permit storage permissions approval

	console.countdown "Waiting" 5
	echo
fi

# remove storage link defaults

rm -rf "$HOME"/storage

# create new storage mount location

mkdir -p "$SETUP_DIRECTORY"/storage

# create new symbolic links for bind mounts

ln -s -f /storage/emulated/0 "$SETUP_DIRECTORY"/storage/internal || :
	
# use regular expression to match label UUID 'XXXX-XXXX'

external_storage=$(echo $(ls /storage | sed -r '/[A0-Z9][-][A0-Z9]/!d'))

if [ ! -z "${external_storage}" ]
then
	console.success "External storage detected [ SD UUID: ${external_storage} ]."
	echo
	
	console.fwd "Linking..."
	echo

	ln -s -f /storage/"${external_storage}" "$SETUP_DIRECTORY"/storage/external || :

else
	console.error "No extrernal storage media detected."
	echo
	
	console.fwd "Continuing..."
	echo
fi

# export variables

cat << FILE >> "$BINARIES_DIRECTORY"/globals

# storage #

export external_storage=${external_storage}

FILE